{
  "intern_experience": [
    {
      "from": "2000-01",
      "to": "2000-02",
      "where": "大公司",
      "what": "前端开发",
      "description": "主要负责写代码",
      "details": [
        "根据项目任务要求完成规划工作和按时完成软件开发。",
        "完成爬虫模块，展示模块。",
        "开发后台管理系统，实现自定义分页，第三方登录。",
        "完成数据整理与入库功能。"
      ]
    },
    {
      "from": "1987-06",
      "to": "1987-09",
      "where": "神秘公司",
      "what": "全栈开发",
      "details": [
        "使用 Scrapy 开发异步爬虫系统，构建IP代理池，优化爬虫策略和防屏蔽规则，提升 200% 网页抓取速度。",
        "优化项目结构，拆分出核心库、常量库、工具库等公共模块，使用 Vue 框架完成内部管理系统，实现自定义检索，第三方登录，自动化部署等 6个 核心功能。",
        "负责数据的清洗与存储数据到 MySQL 数据库，通过日志分析定位慢查询，通过添加联合索引减少了 50% 数据库查询时间。"
      ],
      "projects": [
        {
          "name": "爬虫项目",
          "description": "一个爬虫项目",
          "details": [
            "与产品经理保持沟通，使用 Scrapy 框架对爬虫模块进行重构，提高 200% 爬虫速度并减少服务器 20% CPU负载。改进爬虫策略，降低 40% 被屏蔽的请求数。",
            "作为主要工程师设计以及开发物业模块，活动模块，实现报名，即时通知等 10个 功能。",
            "使用Redis数据库实现分布式爬虫与数据缓存，减少 50% 数据查询时间。",
            "与其他工程师合作，使用 Docker 对项目进行拆分重新架构, 减少业务模块之间的资源耦合, 实现持续集成与自动化部署。"
          ]
        },
        {
          "name": "音乐网站",
          "description": "一个音乐网站",
          "details": [
            "1.主要运用Vue框架，实现了视图层和模型层的分离；",
            "2.通过Ｖue省去了复杂的节点查询，实现了双向数据绑定,降低页面维护难度；",
            "3.使用了Jsonp进行跨域请求,使用了axios进行AJAX请求",
            "4.推荐歌单页面,歌手页,排行榜单页等都是采用v-for来循环遍历实现的；",
            "5.使用better-scroll实现推荐页面轮播效果；"
          ]
        }
      ]
    }
  ]
}
